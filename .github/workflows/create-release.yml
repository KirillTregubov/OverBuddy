name: 'publish'

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  create-release:
    permissions:
      contents: write
    runs-on: windows-latest
    environment: release
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Read changelog
        run: |
          # Read version
          $version = (Get-Content package.json | ConvertFrom-Json).version

          # Read changelog only
          echo "CHANGELOG_BODY<<EOF" >> $env:GITHUB_ENV
          $changelog = Get-Content CHANGELOG.txt -Raw
          echo "$changelog" >> $env:GITHUB_ENV
          echo 'EOF' >> $env:GITHUB_ENV

          # Read tag name
          if ($env:GITHUB_EVENT_NAME -eq 'pull_request') {
            $tag = "v$version-pre"
          } else {
            $tag = "v$version"
          }
          echo "TAG_NAME=$tag" >> $env:GITHUB_ENV

          # Read changelog + release notes
          $releaseNotes = 
          echo "RELEASE_BODY<<EOF" >> $env:GITHUB_ENV
          echo "$changelog" >> $env:GITHUB_ENV
          echo "" >> $env:GITHUB_ENV
          (Get-Content RELEASE.md -Raw) -replace '__VERSION__', "$version" >> $env:GITHUB_ENV
          echo "EOF" >> $env:GITHUB_ENV

          # Print success message
          echo "Successfully read changelog"
        shell: pwsh

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Setup Rust cache
        uses: swatinem/rust-cache@v2
        with:
          workspaces: './src-tauri -> target'

      - name: Setup pnpm
        uses: pnpm/action-setup@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'

      - name: Install frontend dependencies
        run: pnpm install --frozen-lockfile --strict-peer-dependencies

      - name: Build Tauri app
        id: tauri
        uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAURI_SIGNING_PRIVATE_KEY: ${{ secrets.TAURI_SIGNING_PRIVATE_KEY }}
          TAURI_SIGNING_PRIVATE_KEY_PASSWORD: ${{ secrets.TAURI_SIGNING_PRIVATE_KEY_PASSWORD }}
        with:
          tauriScript: pnpm tauri
          tagName: ${{ github.event_name == 'pull_request' && 'v__VERSION__-pre' || 'v__VERSION__' }}
          releaseName: ${{ github.event_name == 'pull_request' && 'OverBuddy v__VERSION__ (Preview)' || 'OverBuddy v__VERSION__' }}
          releaseBody: ${{ env.CHANGELOG_BODY }}
          releaseDraft: true
          prerelease: ${{ github.event_name == 'pull_request' }}

      - name: Update Release Body
        id: update_release
        uses: octokit/request-action@v2.x
        with:
          route: PATCH /repos/{repo}/releases/{release_id}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          INPUT_REPO: ${{ github.repository }}
          INPUT_RELEASE_ID: 194746238 # ${{ steps.tauri.outputs.releaseId }}
          INPUT_BODY: ${{ toJSON(env.RELEASE_BODY) }}
          INPUT_TAG_NAME: ${{ env.TAG_NAME }}

      - name: Handle Update Release Success
        run: echo "Successfully updated release body"
      - name: Handle Update Release Failure
        run: 'echo "Release could not be found. Request failed with status ${{ steps.update_release.outputs.status }}: ${{ steps.update_release.outputs.data }}"'
        if: ${{ failure() }}
