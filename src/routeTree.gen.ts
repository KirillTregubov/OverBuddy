/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as SetupImport } from './routes/setup'
import { Route as SettingsImport } from './routes/settings'
import { Route as MenuImport } from './routes/menu'
import { Route as IndexImport } from './routes/index'
import { Route as SetupIndexImport } from './routes/setup/index'
import { Route as SetupSteamsetupImport } from './routes/setup/steam_setup'
import { Route as SetupSelectImport } from './routes/setup/select'
import { Route as SetupNoSteamOverwatchImport } from './routes/setup/NoSteamOverwatch'
import { Route as SetupKeyImport } from './routes/setup/$key'

// Create/Update Routes

const SetupRoute = SetupImport.update({
  id: '/setup',
  path: '/setup',
  getParentRoute: () => rootRoute,
} as any)

const SettingsRoute = SettingsImport.update({
  id: '/settings',
  path: '/settings',
  getParentRoute: () => rootRoute,
} as any)

const MenuRoute = MenuImport.update({
  id: '/menu',
  path: '/menu',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const SetupIndexRoute = SetupIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => SetupRoute,
} as any)

const SetupSteamsetupRoute = SetupSteamsetupImport.update({
  id: '/steam_setup',
  path: '/steam_setup',
  getParentRoute: () => SetupRoute,
} as any)

const SetupSelectRoute = SetupSelectImport.update({
  id: '/select',
  path: '/select',
  getParentRoute: () => SetupRoute,
} as any)

const SetupNoSteamOverwatchRoute = SetupNoSteamOverwatchImport.update({
  id: '/NoSteamOverwatch',
  path: '/NoSteamOverwatch',
  getParentRoute: () => SetupRoute,
} as any)

const SetupKeyRoute = SetupKeyImport.update({
  id: '/$key',
  path: '/$key',
  getParentRoute: () => SetupRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/menu': {
      id: '/menu'
      path: '/menu'
      fullPath: '/menu'
      preLoaderRoute: typeof MenuImport
      parentRoute: typeof rootRoute
    }
    '/settings': {
      id: '/settings'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof SettingsImport
      parentRoute: typeof rootRoute
    }
    '/setup': {
      id: '/setup'
      path: '/setup'
      fullPath: '/setup'
      preLoaderRoute: typeof SetupImport
      parentRoute: typeof rootRoute
    }
    '/setup/$key': {
      id: '/setup/$key'
      path: '/$key'
      fullPath: '/setup/$key'
      preLoaderRoute: typeof SetupKeyImport
      parentRoute: typeof SetupImport
    }
    '/setup/NoSteamOverwatch': {
      id: '/setup/NoSteamOverwatch'
      path: '/NoSteamOverwatch'
      fullPath: '/setup/NoSteamOverwatch'
      preLoaderRoute: typeof SetupNoSteamOverwatchImport
      parentRoute: typeof SetupImport
    }
    '/setup/select': {
      id: '/setup/select'
      path: '/select'
      fullPath: '/setup/select'
      preLoaderRoute: typeof SetupSelectImport
      parentRoute: typeof SetupImport
    }
    '/setup/steam_setup': {
      id: '/setup/steam_setup'
      path: '/steam_setup'
      fullPath: '/setup/steam_setup'
      preLoaderRoute: typeof SetupSteamsetupImport
      parentRoute: typeof SetupImport
    }
    '/setup/': {
      id: '/setup/'
      path: '/'
      fullPath: '/setup/'
      preLoaderRoute: typeof SetupIndexImport
      parentRoute: typeof SetupImport
    }
  }
}

// Create and export the route tree

interface SetupRouteChildren {
  SetupKeyRoute: typeof SetupKeyRoute
  SetupNoSteamOverwatchRoute: typeof SetupNoSteamOverwatchRoute
  SetupSelectRoute: typeof SetupSelectRoute
  SetupSteamsetupRoute: typeof SetupSteamsetupRoute
  SetupIndexRoute: typeof SetupIndexRoute
}

const SetupRouteChildren: SetupRouteChildren = {
  SetupKeyRoute: SetupKeyRoute,
  SetupNoSteamOverwatchRoute: SetupNoSteamOverwatchRoute,
  SetupSelectRoute: SetupSelectRoute,
  SetupSteamsetupRoute: SetupSteamsetupRoute,
  SetupIndexRoute: SetupIndexRoute,
}

const SetupRouteWithChildren = SetupRoute._addFileChildren(SetupRouteChildren)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/menu': typeof MenuRoute
  '/settings': typeof SettingsRoute
  '/setup': typeof SetupRouteWithChildren
  '/setup/$key': typeof SetupKeyRoute
  '/setup/NoSteamOverwatch': typeof SetupNoSteamOverwatchRoute
  '/setup/select': typeof SetupSelectRoute
  '/setup/steam_setup': typeof SetupSteamsetupRoute
  '/setup/': typeof SetupIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/menu': typeof MenuRoute
  '/settings': typeof SettingsRoute
  '/setup/$key': typeof SetupKeyRoute
  '/setup/NoSteamOverwatch': typeof SetupNoSteamOverwatchRoute
  '/setup/select': typeof SetupSelectRoute
  '/setup/steam_setup': typeof SetupSteamsetupRoute
  '/setup': typeof SetupIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/menu': typeof MenuRoute
  '/settings': typeof SettingsRoute
  '/setup': typeof SetupRouteWithChildren
  '/setup/$key': typeof SetupKeyRoute
  '/setup/NoSteamOverwatch': typeof SetupNoSteamOverwatchRoute
  '/setup/select': typeof SetupSelectRoute
  '/setup/steam_setup': typeof SetupSteamsetupRoute
  '/setup/': typeof SetupIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/menu'
    | '/settings'
    | '/setup'
    | '/setup/$key'
    | '/setup/NoSteamOverwatch'
    | '/setup/select'
    | '/setup/steam_setup'
    | '/setup/'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/menu'
    | '/settings'
    | '/setup/$key'
    | '/setup/NoSteamOverwatch'
    | '/setup/select'
    | '/setup/steam_setup'
    | '/setup'
  id:
    | '__root__'
    | '/'
    | '/menu'
    | '/settings'
    | '/setup'
    | '/setup/$key'
    | '/setup/NoSteamOverwatch'
    | '/setup/select'
    | '/setup/steam_setup'
    | '/setup/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  MenuRoute: typeof MenuRoute
  SettingsRoute: typeof SettingsRoute
  SetupRoute: typeof SetupRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  MenuRoute: MenuRoute,
  SettingsRoute: SettingsRoute,
  SetupRoute: SetupRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/menu",
        "/settings",
        "/setup"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/menu": {
      "filePath": "menu.tsx"
    },
    "/settings": {
      "filePath": "settings.tsx"
    },
    "/setup": {
      "filePath": "setup.tsx",
      "children": [
        "/setup/$key",
        "/setup/NoSteamOverwatch",
        "/setup/select",
        "/setup/steam_setup",
        "/setup/"
      ]
    },
    "/setup/$key": {
      "filePath": "setup/$key.tsx",
      "parent": "/setup"
    },
    "/setup/NoSteamOverwatch": {
      "filePath": "setup/NoSteamOverwatch.tsx",
      "parent": "/setup"
    },
    "/setup/select": {
      "filePath": "setup/select.tsx",
      "parent": "/setup"
    },
    "/setup/steam_setup": {
      "filePath": "setup/steam_setup.tsx",
      "parent": "/setup"
    },
    "/setup/": {
      "filePath": "setup/index.tsx",
      "parent": "/setup"
    }
  }
}
ROUTE_MANIFEST_END */
