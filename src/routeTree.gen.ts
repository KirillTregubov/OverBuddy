/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as SetupRouteImport } from './routes/setup'
import { Route as SettingsRouteImport } from './routes/settings'
import { Route as MenuRouteImport } from './routes/menu'
import { Route as IndexRouteImport } from './routes/index'
import { Route as SetupIndexRouteImport } from './routes/setup/index'
import { Route as SetupSteam_setupRouteImport } from './routes/setup/steam_setup'
import { Route as SetupSelectRouteImport } from './routes/setup/select'
import { Route as SetupNoSteamOverwatchRouteImport } from './routes/setup/NoSteamOverwatch'
import { Route as SetupKeyRouteImport } from './routes/setup/$key'

const SetupRoute = SetupRouteImport.update({
  id: '/setup',
  path: '/setup',
  getParentRoute: () => rootRouteImport,
} as any)
const SettingsRoute = SettingsRouteImport.update({
  id: '/settings',
  path: '/settings',
  getParentRoute: () => rootRouteImport,
} as any)
const MenuRoute = MenuRouteImport.update({
  id: '/menu',
  path: '/menu',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const SetupIndexRoute = SetupIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => SetupRoute,
} as any)
const SetupSteam_setupRoute = SetupSteam_setupRouteImport.update({
  id: '/steam_setup',
  path: '/steam_setup',
  getParentRoute: () => SetupRoute,
} as any)
const SetupSelectRoute = SetupSelectRouteImport.update({
  id: '/select',
  path: '/select',
  getParentRoute: () => SetupRoute,
} as any)
const SetupNoSteamOverwatchRoute = SetupNoSteamOverwatchRouteImport.update({
  id: '/NoSteamOverwatch',
  path: '/NoSteamOverwatch',
  getParentRoute: () => SetupRoute,
} as any)
const SetupKeyRoute = SetupKeyRouteImport.update({
  id: '/$key',
  path: '/$key',
  getParentRoute: () => SetupRoute,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/menu': typeof MenuRoute
  '/settings': typeof SettingsRoute
  '/setup': typeof SetupRouteWithChildren
  '/setup/$key': typeof SetupKeyRoute
  '/setup/NoSteamOverwatch': typeof SetupNoSteamOverwatchRoute
  '/setup/select': typeof SetupSelectRoute
  '/setup/steam_setup': typeof SetupSteam_setupRoute
  '/setup/': typeof SetupIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/menu': typeof MenuRoute
  '/settings': typeof SettingsRoute
  '/setup/$key': typeof SetupKeyRoute
  '/setup/NoSteamOverwatch': typeof SetupNoSteamOverwatchRoute
  '/setup/select': typeof SetupSelectRoute
  '/setup/steam_setup': typeof SetupSteam_setupRoute
  '/setup': typeof SetupIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/menu': typeof MenuRoute
  '/settings': typeof SettingsRoute
  '/setup': typeof SetupRouteWithChildren
  '/setup/$key': typeof SetupKeyRoute
  '/setup/NoSteamOverwatch': typeof SetupNoSteamOverwatchRoute
  '/setup/select': typeof SetupSelectRoute
  '/setup/steam_setup': typeof SetupSteam_setupRoute
  '/setup/': typeof SetupIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/menu'
    | '/settings'
    | '/setup'
    | '/setup/$key'
    | '/setup/NoSteamOverwatch'
    | '/setup/select'
    | '/setup/steam_setup'
    | '/setup/'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/menu'
    | '/settings'
    | '/setup/$key'
    | '/setup/NoSteamOverwatch'
    | '/setup/select'
    | '/setup/steam_setup'
    | '/setup'
  id:
    | '__root__'
    | '/'
    | '/menu'
    | '/settings'
    | '/setup'
    | '/setup/$key'
    | '/setup/NoSteamOverwatch'
    | '/setup/select'
    | '/setup/steam_setup'
    | '/setup/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  MenuRoute: typeof MenuRoute
  SettingsRoute: typeof SettingsRoute
  SetupRoute: typeof SetupRouteWithChildren
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/setup': {
      id: '/setup'
      path: '/setup'
      fullPath: '/setup'
      preLoaderRoute: typeof SetupRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/settings': {
      id: '/settings'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof SettingsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/menu': {
      id: '/menu'
      path: '/menu'
      fullPath: '/menu'
      preLoaderRoute: typeof MenuRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/setup/': {
      id: '/setup/'
      path: '/'
      fullPath: '/setup/'
      preLoaderRoute: typeof SetupIndexRouteImport
      parentRoute: typeof SetupRoute
    }
    '/setup/steam_setup': {
      id: '/setup/steam_setup'
      path: '/steam_setup'
      fullPath: '/setup/steam_setup'
      preLoaderRoute: typeof SetupSteam_setupRouteImport
      parentRoute: typeof SetupRoute
    }
    '/setup/select': {
      id: '/setup/select'
      path: '/select'
      fullPath: '/setup/select'
      preLoaderRoute: typeof SetupSelectRouteImport
      parentRoute: typeof SetupRoute
    }
    '/setup/NoSteamOverwatch': {
      id: '/setup/NoSteamOverwatch'
      path: '/NoSteamOverwatch'
      fullPath: '/setup/NoSteamOverwatch'
      preLoaderRoute: typeof SetupNoSteamOverwatchRouteImport
      parentRoute: typeof SetupRoute
    }
    '/setup/$key': {
      id: '/setup/$key'
      path: '/$key'
      fullPath: '/setup/$key'
      preLoaderRoute: typeof SetupKeyRouteImport
      parentRoute: typeof SetupRoute
    }
  }
}

interface SetupRouteChildren {
  SetupKeyRoute: typeof SetupKeyRoute
  SetupNoSteamOverwatchRoute: typeof SetupNoSteamOverwatchRoute
  SetupSelectRoute: typeof SetupSelectRoute
  SetupSteam_setupRoute: typeof SetupSteam_setupRoute
  SetupIndexRoute: typeof SetupIndexRoute
}

const SetupRouteChildren: SetupRouteChildren = {
  SetupKeyRoute: SetupKeyRoute,
  SetupNoSteamOverwatchRoute: SetupNoSteamOverwatchRoute,
  SetupSelectRoute: SetupSelectRoute,
  SetupSteam_setupRoute: SetupSteam_setupRoute,
  SetupIndexRoute: SetupIndexRoute,
}

const SetupRouteWithChildren = SetupRoute._addFileChildren(SetupRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  MenuRoute: MenuRoute,
  SettingsRoute: SettingsRoute,
  SetupRoute: SetupRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
